{% extends "layout.njk" %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% block page_title %}
  {{ t('telephoneContact.heading') }} {{ t('generalContent.pageTitle') }}
{% endblock %}

{% block beforeContent %}
  {% if not inEditMode %}
    <div role="navigation" aria-label="back">
      {{ govukBackLink({
        text: t('generalContent.back'),
        href: backLink,
        attributes: {
          'data-automation-id': 'back'
        }
      }) }}
    </div>
  {% endif %}
{% endblock %}

{% block content %}
  {% include "error-banner.njk" %}

  {% if inEditMode and not errors %}
    <div class="alert govuk-body govuk-!-margin-bottom-8">
      {{ t('telephoneContact.editMode.changeAlert', {
        openLink: '<a href="' + backLink + '" data-automation-id="alert-back-link" class="govuk-link">',
        closeLink: '</a>'
      }) | nl2br | safe }}
    </div>
  {% endif %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <form method="post">
        <input type="hidden" name="_csrf" value="{{ csrfToken }}">
        {% set yesOptionHtml %}
        {% set inputFieldName = 'telephoneNumber' %}
        {{ govukInput({
          id: inputFieldName,
          name: inputFieldName,
          errorMessage: inputFieldName | fieldErrorObject(errors),
          type: 'tel',
          value: telephoneNumber,
          classes: 'govuk-!-width-one-third',
          label: {
            text: t('telephoneContact.telephoneLabel')
          }
        }) }}
        {% endset %}
        {% set radioFieldName = 'contactByTelephone' %}
        {{ govukRadios({
          name: radioFieldName,
          errorMessage: radioFieldName | fieldErrorObject(errors),
          fieldset: {
            legend: {
              text: t('telephoneContact.heading'),
              isPageHeading: true,
              classes: 'govuk-fieldset__legend--xl',
              attributes: {
                'data-automation-id': 'heading'
              }
            }
          },
          hint: {
            text: t('telephoneContact.hintText'),
            attributes: {
              'data-automation-id': 'hint'
            }
          },
          items: [
            {
              text: t('generalContent.yes'),
              value: 'yes',
              checked: contactByTelephone === 'yes',
              attributes: {
                'data-automation-id': 'yes'
              },
              conditional: {
                html: yesOptionHtml
              }
            },
            {
              text: t('generalContent.no'),
              value: 'no',
              checked: contactByTelephone === 'no',
              attributes: {
                'data-automation-id': 'no'
              }
            }
          ]
        }) }}

        {% if inEditMode %}
          {{ govukButton({
            text: t('generalContent.confirmChangeButton'),
            type: 'submit',
            classes: 'govuk-!-margin-right-1',
            attributes: {
              'data-automation-id': 'submit'
            }
          }) }}
          {{ govukButton({
            text: t('generalContent.cancelChangeButton'),
            href: backLink,
            classes: 'govuk-button--secondary',
            attributes: {
              'data-automation-id': 'cancel'
            }
          }) }}
        {% else %}
          {{ govukButton({
            text: t('generalContent.continueButton'),
            type: 'submit',
            classes: 'govuk-!-margin-right-1',
            attributes: {
              'data-automation-id': 'submit'
            }
          }) }}
        {% endif %}
      </form>
    </div>
  </div>
{% endblock %}
